plugins {
    id "com.github.johnrengelman.shadow" version "6.1.0"
    id 'io.micronaut.application' version '1.4.5'
    id 'java'
    id 'groovy'
    id 'jacoco'
    id 'org.sonarqube' version '3.1.1'
    id 'com.github.kt3k.coveralls' version '2.12.0'
    id 'com.diffplug.spotless' version '5.12.1'
}

version "0.4.0"
group "io.github.devatherock"

repositories {
    mavenCentral()
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly
}

dependencies {
    def lombokVersion = '1.18.20'

    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: lombokVersion
    compileOnly group: 'org.projectlombok', name: 'lombok', version: lombokVersion
    compileOnly group: 'com.google.code.findbugs', name: 'annotations', version: '3.0.1'

    annotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"
    annotationProcessor 'io.micronaut.configuration:micronaut-openapi'
    annotationProcessor "io.micronaut:micronaut-graal"
    compileOnly "org.graalvm.nativeimage:svm"

    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation "io.micronaut:micronaut-inject"
    implementation "io.micronaut:micronaut-validation"
    implementation "io.micronaut:micronaut-runtime"
    implementation "io.micronaut.micrometer:micronaut-micrometer-core"
    implementation "io.micronaut:micronaut-management"
    implementation "io.swagger.core.v3:swagger-annotations"
    implementation "io.micronaut:micronaut-http-server-netty"
    implementation "io.micronaut:micronaut-http-client"
    implementation "io.micronaut.cache:micronaut-cache-core"
    implementation "io.micronaut.cache:micronaut-cache-caffeine"

    implementation group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: '6.6'

    runtimeOnly "ch.qos.logback:logback-classic:1.2.3"
    testAnnotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testImplementation "io.micronaut:micronaut-inject-groovy"
    testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation "io.micronaut.test:micronaut-test-spock"

    testImplementation group: 'org.spockframework', name: 'spock-core', version: '1.3-groovy-2.5'
    testImplementation group: 'cglib', name: 'cglib-nodep', version: '3.3.0'
    testImplementation group: 'org.objenesis', name: 'objenesis', version: '3.2'
    testImplementation group: 'com.github.tomakehurst', name: 'wiremock', version: '2.27.2'
}

test.classpath += configurations.developmentOnly
mainClassName = "io.github.devatherock.Application"

test {
    useJUnitPlatform()
    if (Boolean.getBoolean('graalvm')) {
        jvmArgs("-agentlib:native-image-agent=access-filter-file=$projectDir/src/main/resources/graal/access-filter.json,config-output-dir=$projectDir/src/main/graal")
    }
    systemProperty 'micronaut.env.deduction', 'false'
}

tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}

shadowJar {
    mergeServiceFiles()
}

run {
    classpath += configurations.developmentOnly
    jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
    systemProperties(System.properties)
}

ext.jacoco = [
    exclusions: [
        'io/github/devatherock/Application.class',
        'io/github/devatherock/test/ArtifactoryController.class'
    ]
]
apply from: 'https://raw.githubusercontent.com/devatherock/gradle-includes/master/checks.gradle'